buildscript {
	ext {
		springBootVersion = '2.0.0.M6'
	}
	repositories {
		mavenCentral()
		maven { url 'https://repo.spring.io/snapshot' }
		maven { url 'https://repo.spring.io/milestone' }
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
	}
}

apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'

sourceCompatibility = 9
targetCompatibility = 9

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://jitpack.io' } // for spring-test-junit5
}

dependencies {
	compile project(':core')
	compile project(':database')
	compile project(':backend')
	compile "org.springframework.boot:spring-boot-starter:$springBootVersion"
	compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
	compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
	compile 'org.postgresql:postgresql:42.1.4'
	compile 'org.apache.ddlutils:ddlutils:1.0'
	testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion") {
		exclude module: 'junit'
	}
	testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.0'
	testCompile 'org.junit.jupiter:junit-jupiter-engine:5.0.0'
	testCompile 'org.junit.jupiter:junit-jupiter-params:5.0.0'
	testCompile 'com.github.sbrannen:spring-test-junit5:1.0.0'
}

junitPlatform {
	filters {
		includeClassNamePattern project.hasProperty('IT') ? '^.*IT$' : '^.*Tests?$'
	}
}

checkstyle {
	configDir = file("$rootDir/config/checkstyle")
	toolVersion = '8.2'
}

task run(dependsOn: 'bootRun')
